<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TwitchLib.Api.V5</name>
    </assembly>
    <members>
        <member name="M:TwitchLib.Api.V5.Channels.GetChannelAsync(System.String)">
            <summary>
                [ASYNC] Gets a channel object based on a specified OAuth token.
                <para />
                Get Channel returns more data than Get Channel by ID because Get Channel is privileged.
                <para />
                <para>Required Authentication Scope: channel_read</para>
            </summary>
            <returns>A ChannelPrivileged object including all Channel object info plus email and streamkey.</returns>
        </member>
        <member name="M:TwitchLib.Api.V5.Channels.GetChannelByIDAsync(System.String)">
            <summary>
                [ASYNC] Gets a speicified channel object.
                <para />
            </summary>
            <param name="channelId">The specified channelId of the channel to get the information from.</param>
            <returns>A Channel object from the response of the Twitch API.</returns>
        </member>
        <member name="M:TwitchLib.Api.V5.Channels.UpdateChannelAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
                [ASYNC] Updates specified properties of a specified channel.
                <para />
                In the request, the new properties are specified as a JSON object representation.
                <para />
                <para>
                    Required Authentication Scopes: To update delay or channel_feed_enabled parameter: a channel_editor token
                    from the channel owner. To update other parameters: channel_editor.
                </para>
            </summary>
            <param name="channelId">The specified channelId of the channel to get the information from.</param>
            <param name="status">Description of the broadcaster’s status, displayed as a title on the channel page.</param>
            <param name="game">Name of the game.</param>
            <param name="delay">
                Channel delay, in seconds. This inserts a delay in the live feed. Requires the channel owner’s
                OAuth token.
            </param>
            <param name="channelFeedEnabled">
                If true, the channel’s feed is turned on. Requires the channel owner’s OAuth token.
                Default: false.
            </param>
            <param name="authToken"></param>
            <returns>A Channel object with the newly changed properties.</returns>
        </member>
        <member name="M:TwitchLib.Api.V5.Channels.GetChannelEditorsAsync(System.String,System.String)">
            <summary>
                <para>[ASYNC] Gets a list of users who are editors for a specified channel.</para>
                <para>Required Authentication Scope: channel_read</para>
            </summary>
            <param name="channelId">The specified channelId of the channel to get the information from.</param>
            <param name="authToken"></param>
            <returns>A ChannelEditors object that contains an array of the Users which are Editor of the channel.</returns>
        </member>
        <member name="M:TwitchLib.Api.V5.Channels.GetChannelFollowersAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
                <para>
                    [ASYNC] Gets a list of users who follow a specified channel, sorted by the date when they started following
                    the channel (newest first, unless specified otherwise).
                </para>
            </summary>
            <param name="channelId">The specified channelId of the channel to get the information from.</param>
            <param name="limit">Maximum number of objects to return. Default: 25. Maximum: 100.</param>
            <param name="offset">Object offset for pagination of results. Default: 0.</param>
            <param name="cursor">Tells the server where to start fetching the next set of results, in a multi-page response.</param>
            <param name="direction">Sorting direction. Valid values: "asc", "desc" (newest first). Default: "desc".</param>
            <returns>A ChannelFollowers object that represents the response from the Twitch API.</returns>
        </member>
        <member name="M:TwitchLib.Api.V5.Channels.GetAllFollowersAsync(System.String)">
            <summary>
                [ASYNC] Gets all of the followers a channel has. THIS IS A VERY EXPENSIVE CALL AND CAN TAKE A LONG TIME IF THE
                CHANNEL HAS A LOT OF FOLLOWERS. NOT RECOMMENDED.
            </summary>
            <param name="channelId">THe specified channelId of the channel to get the information from.</param>
            <returns></returns>
        </member>
        <member name="M:TwitchLib.Api.V5.Channels.GetChannelTeamsAsync(System.String)">
            <summary>
                <para>[ASYNC] Gets a list of teams to which a specified channel belongs.</para>
            </summary>
            <param name="channelId">The specified channelId of the channel to get the information from.</param>
            <returns>An Array of the Teams the Channel belongs to.</returns>
        </member>
        <member name="M:TwitchLib.Api.V5.Channels.GetChannelSubscribersAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
                <para>[ASYNC] Gets a list of users subscribed to a specified channel, sorted by the date when they subscribed.</para>
                <para>Required Authentication Scope: channel_subscriptions</para>
            </summary>
            <param name="channelId">The specified channelId of the channel to get the information from.</param>
            <param name="limit">Maximum number of objects to return. Default: 25. Maximum: 100.</param>
            <param name="offset">Object offset for pagination of results. Default: 0.</param>
            <param name="direction">Sorting direction. Valid values: "asc", "desc" (newest first). Default: "desc".</param>
            <param name="authToken">The associated auth token for this request.</param>
            <returns></returns>
        </member>
        <member name="M:TwitchLib.Api.V5.Channels.GetAllSubscribersAsync(System.String,System.String)">
            <summary>
                [ASYNC] Makes a number of calls to get all subscriber objects belonging to a channel. THIS IS AN EXPENSIVE
                OPERATION.
            </summary>
            <param name="channelId">ChannelId indicating channel to get subs from.</param>
            <param name="accessToken">The associated auth token for this request.</param>
            <returns></returns>
        </member>
        <member name="M:TwitchLib.Api.V5.Channels.CheckChannelSubscriptionByUserAsync(System.String,System.String,System.String)">
            <summary>
                <para>
                    [ASYNC] Checks if a specified channel has a specified user subscribed to it. Intended for use by channel
                    owners.
                </para>
                <para>
                    Returns a subscription object which includes the user if that user is subscribed. Requires authentication for
                    the channel.
                </para>
                <para>Required Authentication Scope: channel_check_subscription</para>
            </summary>
            <param name="channelId">The specified channel to check the subscription on.</param>
            <param name="userId">The specified user to check for.</param>
            <param name="authToken"></param>
            <returns>Returns a subscription object or null if not subscribed.</returns>
        </member>
        <member name="M:TwitchLib.Api.V5.Channels.ResetChannelStreamKeyAsync(System.String,System.String)">
            <summary>
                <para>
                    [ASYNC] Deletes the stream key for a specified channel. Once it is deleted, the stream key is automatically
                    reset.
                </para>
                <para>
                    A stream key (also known as authorization key) uniquely identifies a stream. Each broadcast uses an RTMP URL
                    that includes the stream key. Stream keys are assigned by Twitch.
                </para>
                <para>Required Authentication Scope: channel_stream</para>
            </summary>
            <param name="channelId">The specified channel to reset the StreamKey on.</param>
            <param name="authToken"></param>
            <returns>
                A ChannelPrivileged object that also contains the email and stream key of the channel aside from the normal
                channel values.
            </returns>
        </member>
        <member name="M:TwitchLib.Api.V5.V5.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,TwitchLib.Api.Core.Interfaces.IRateLimiter,TwitchLib.Api.Core.Interfaces.IApiSettings,TwitchLib.Api.Core.Interfaces.IHttpCallHandler)">
            <summary>
            Creates an Instance of the V5 Class.
            </summary>
            <param name="loggerFactory">Instance Of LoggerFactory, otherwise no logging is used, </param>
            <param name="rateLimiter">Instance Of RateLimiter, otherwise no ratelimiter is used.</param>
            <param name="settings">Instance of ApiSettings, otherwise defaults used, can be changed later</param>
            <param name="http">Instance of HttpCallHandler, otherwise default handler used</param>
        </member>
    </members>
</doc>
